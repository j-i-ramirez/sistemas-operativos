"""
Django settings for operativos_project project.

Generated by 'django-admin startproject' using Django 5.1.3.
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
SECRET_KEY = 'django-insecure-0==m0@*f-)_6rh$+pd$8y(2q)eu!&$+@1^_vu0vav9=^i6n$y*'
DEBUG = True
ALLOWED_HOSTS = ['*']  # Permite todos los hosts para desarrollo

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'usuarios',
    'crud_api',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'operativos_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Agregamos la carpeta templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'operativos_project.wsgi.application'

# Configuraci贸n de bases de datos para Docker
DATABASES = {
    'default': {  # Para usuarios
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'users_db',
        'USER': 'admin',
        'PASSWORD': 'secret',
        'HOST': 'db_users',  # Nombre del servicio en docker-compose
        'PORT': '5432',
    },
    'crud_db': {  # Para datos CRUD
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'crud_db',
        'USER': 'admin',
        'PASSWORD': 'secret',
        'HOST': 'db_crud',  # Nombre del servicio en docker-compose
        'PORT': '5432',
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'es-es'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files
STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Para producci贸n

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuraci贸n de CORS (solo para desarrollo)
CORS_ALLOW_ALL_ORIGINS = True

# Configuraci贸n de REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ]
}

# Router de bases de datos
DATABASE_ROUTERS = ['crud_api.db_routers.CrudDBRouter']

# Modelo de usuario personalizado
AUTH_USER_MODEL = 'usuarios.CustomUser'